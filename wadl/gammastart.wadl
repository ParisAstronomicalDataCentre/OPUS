<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:uws="xmlns:uws=http://www.ivoa.net/xml/UWS/v1.0" xmlns:xlink="xmlns:xlink=http://www.w3.org/1999/xlink" xsi:schemaLocation="http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd">
    <doc>Implements the UWS 1.0 service</doc>
    <grammars>
        <include href="http://ivoa.net/xml/UWS/UWS-v1.0.xsd"/>
    </grammars>

<!-- TODO: set UWS server base URL -->
    <resources base="https://voparis-uws-test.obspm.fr/">

<!-- TODO: set jobname -->
    <resource id="joblist" path="gammastart">
        <doc>This resource contains the whole list of job</doc>
        <doc title="description"></doc>
        <method id="list_jobs" name="GET">
            <doc>List all created jobs. The list may be empty if the UWS is idle</doc>
            <response status="200">
                <representation mediaType="text/xml" element="uws:jobs"/>
            </response>
            <response status="500"/>
        </method>
        <method id="create_job" name="POST">
            <doc>POSTing a request to the Job List creates a new job</doc>
            <request id="create_job_parameters">
                <param style="query" name="PHASE" type="xs:string" required="false" fixed="RUN"/>
<!-- TODO: insert parameters -->
            <param default="config.cfg" name="configfile" required="False" style="query" type="xs:string"><doc></doc></param><param default="runlist" name="runlist" required="True" style="query" type="xs:string"><doc></doc></param><param default="std_north_1b" name="anaconfig" required="True" style="query" type="xs:string"><doc>user analysis configuration, choices="std_north_1b|std_south_1b"</doc></param><param default="0.4" name="emin" required="True" style="query" type="xs:double"><doc>energy range MIN value (TeV)  </doc></param><param default="40" name="emax" required="True" style="query" type="xs:double"><doc>energy range MAX value (TeV)  </doc></param><param default="20" name="nebin" required="True" style="query" type="xs:int"><doc>number of energy bins</doc></param><param default="0" name="optcontour" required="True" style="query" type="xs:int"><doc>Option to compute contours, (0: no contours, 1: contours for two first parameters of all hypothesis, 2: all contours are computed for all hypothesis (can be very long)), choices="0|1|2"</doc></param><param default="30" name="optcontour_npoints" required="False" style="query" type="xs:int"><doc>Number of points for countours</doc></param><param default="0" name="optminimisationlevel" required="False" style="query" type="xs:int"><doc></doc></param><param default="0" name="optlc" required="False" style="query" type="xs:int"><doc></doc></param><param default="1" name="opthyp" required="True" style="query" type="xs:int"><doc>Hypothesis: 1 = PowerLaw, 2 = ExpoCutOffPowerLaw, 3 = LogParabolic, 4 = BrokenPowerLaw, 5 = SuperExpoCutOffPowerLaw, 6 = SmoothBrokenPowerLaw     </doc></param><param default="1" name="opterefhyp" required="True" style="query" type="xs:int"><doc>reference energy (TeV)</doc></param><param default="1" name="opteminhyp" required="True" style="query" type="xs:double"><doc></doc></param><param default="1000000" name="optemaxhyp" required="True" style="query" type="xs:double"><doc></doc></param><param default="Crab" name="optsrcname" required="True" style="query" type="xs:string"><doc>Source name</doc></param><param default="1" name="optbutterfly" required="True" style="query" type="xs:int"><doc></doc></param><param default="1.5" name="optrebin" required="True" style="query" type="xs:double"><doc>minimum significance each used energy bin must have</doc></param></request>
            <response status="303">
                <doc>Redirects to newly created resource /{job-id}</doc>
            </response>
            <response status="415"/>
            <response status="500"/>
        </method>

        <resource id="job" path="{job-id}">
            <doc>This resource handles a job</doc>
            <method name="DELETE">
                <doc>Delete a job</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="303">
                    <doc>Redirects to /{job}</doc>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
            <method name="GET">
                <doc>Get a job summary</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/xml" element="uws:job"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
            <method name="POST">
                <doc>Control a Job</doc>
                <request id="control_job_parameters">
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                    <param style="query" name="ACTION" type="xs:string" required="false">
                        <option value="DELETE"/>
                    </param>
<!-- TODO: insert parameters -->
                <param default="config.cfg" name="configfile" required="False" style="query" type="xs:string"><doc></doc></param><param default="runlist" name="runlist" required="True" style="query" type="xs:string"><doc></doc></param><param default="std_north_1b" name="anaconfig" required="True" style="query" type="xs:string"><doc>user analysis configuration, choices="std_north_1b|std_south_1b"</doc></param><param default="0.4" name="emin" required="True" style="query" type="xs:double"><doc>energy range MIN value (TeV)  </doc></param><param default="40" name="emax" required="True" style="query" type="xs:double"><doc>energy range MAX value (TeV)  </doc></param><param default="20" name="nebin" required="True" style="query" type="xs:int"><doc>number of energy bins</doc></param><param default="0" name="optcontour" required="True" style="query" type="xs:int"><doc>Option to compute contours, (0: no contours, 1: contours for two first parameters of all hypothesis, 2: all contours are computed for all hypothesis (can be very long)), choices="0|1|2"</doc></param><param default="30" name="optcontour_npoints" required="False" style="query" type="xs:int"><doc>Number of points for countours</doc></param><param default="0" name="optminimisationlevel" required="False" style="query" type="xs:int"><doc></doc></param><param default="0" name="optlc" required="False" style="query" type="xs:int"><doc></doc></param><param default="1" name="opthyp" required="True" style="query" type="xs:int"><doc>Hypothesis: 1 = PowerLaw, 2 = ExpoCutOffPowerLaw, 3 = LogParabolic, 4 = BrokenPowerLaw, 5 = SuperExpoCutOffPowerLaw, 6 = SmoothBrokenPowerLaw     </doc></param><param default="1" name="opterefhyp" required="True" style="query" type="xs:int"><doc>reference energy (TeV)</doc></param><param default="1" name="opteminhyp" required="True" style="query" type="xs:double"><doc></doc></param><param default="1000000" name="optemaxhyp" required="True" style="query" type="xs:double"><doc></doc></param><param default="Crab" name="optsrcname" required="True" style="query" type="xs:string"><doc>Source name</doc></param><param default="1" name="optbutterfly" required="True" style="query" type="xs:int"><doc></doc></param><param default="1.5" name="optrebin" required="True" style="query" type="xs:double"><doc>minimum significance each used energy bin must have</doc></param></request>
                <response status="303">
                    <doc>Redirects to /{job}/{job-id}</doc>
                </response>
                <response status="404"/>
                <response status="415"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_phase" path="{job-id}/phase">
            <doc>This resource handles job phase</doc>
            <method name="GET">
                <doc>Get job phase</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/plain" element="xs:string"/>
                </response>
                <response status="404"/> 
                <response status="500"/>
            </method>
            <method name="POST">
                <doc>Control a Job</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                    <param style="query" name="PHASE" type="xs:string" required="false">
                        <option value="ABORT"/>
                        <option value="RUN"/>
                    </param>
                    <representation mediaType="application/x-www-form-urlencoded"/>
                </request>
                <response status="303">
                    <doc>Redirects to /{job}/{job-id}</doc>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_executionduration" path="{job-id}/executionduration">
            <doc>This resource handles execution duration</doc>
            <method name="GET">
                <doc>Get job execution duration</doc>
                <request>
                    <param style="template" name="job-id" type="xs:int" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/plain" element="xs:int"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
            <method name="POST">
                <doc>Set execution duration</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
<!-- TODO: set default execution duration in seconds -->
                    <param style="query" name="EXECUTIONDURATION" type="xs:int" required="false" default="600"/>
                </request>
                <response status="303">
                    <doc>Redirects to /{job}/{job-id}</doc>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_destruction" path="{job-id}/destruction">
            <doc>This resource handles the destruction time of the job</doc>
            <method name="GET">
                <doc>Get job destruction time as ISO8601 format</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/plain" element="xs:dateTime"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
            <method name="POST">
                <doc>Set job destruction time</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                    <param style="query" name="DESTRUCTION" type="xs:dateTime" required="false"/>
                </request>
                <response status="303">
                    <doc>Redirects to /{job}/{job-id}</doc>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_error" path="{job-id}/error">
            <doc>This resource handles error happening during the job processing</doc>
            <method name="GET">
                <doc>Get the generated error</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/xml" element="xs:string"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_quote" path="{job-id}/quote">
            <doc title="Quote Resource">This resource handles quote prediction</doc>
            <method name="GET">
                <doc>Get quote value</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
<!-- TODO: set default quote in seconds -->
                    <representation id="quote" mediaType="text/plain" element="xs:int" default="300"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_results" path="{job-id}/results">
            <doc title="Results Resource">This resource handles job results</doc>
            <method name="GET">
                <doc>Get job results</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/xml" element="uws:results"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_result_name" path="{job-id}/results/{result-id}">
            <doc>This resource handles result value</doc>
            <method name="GET">
                <doc>Get a result</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                    <param style="template" name="result-id" type="xs:string" required="true">
<!-- TODO: add result names as option blocks -->
                    <option default="fitresult.root" mediaType="text/plain" value="fitresult"><doc>ROOT file containing results</doc></option><option default="logstart_PWL.txt" mediaType="text/plain" value="logstart_PWL"><doc></doc></option><option default="logstart_EXP.txt" mediaType="text/plain" value="logstart_EXP"><doc></doc></option><option default="logstart_LOG.txt" mediaType="text/plain" value="logstart_LOG"><doc></doc></option><option default="logstart_BPWL.txt" mediaType="text/plain" value="logstart_BPWL"><doc></doc></option><option default="logstart_SEXP.txt" mediaType="text/plain" value="logstart_SEXP"><doc></doc></option><option default="logstart_SBPWL.txt" mediaType="text/plain" value="logstart_SBPWL"><doc></doc></option><option default="config.cfg" mediaType="text/plain" value="configfile"><doc></doc></option><option default="output.png" mediaType="image/png" value="output"><doc></doc></option></param>
                </request>
                <response status="200">
                    <representation mediaType="text/plain" element="xs:string"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_parameters" path="{job-id}/parameters">
            <doc title="Parameters Resource">This resource handles job parameters</doc>
            <method name="GET">
                <doc>Get Job parameters</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/xml" element="uws:parameters"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
            <method name="POST">
                <doc>Set parameters</doc>
                <request id="set_job_parameters">
                    <param style="template" name="job-id" type="xs:string" required="true"/>
<!-- TODO: insert parameters -->
                <param default="config.cfg" name="configfile" required="False" style="query" type="xs:string"><doc></doc></param><param default="runlist" name="runlist" required="True" style="query" type="xs:string"><doc></doc></param><param default="std_north_1b" name="anaconfig" required="True" style="query" type="xs:string"><doc>user analysis configuration, choices="std_north_1b|std_south_1b"</doc></param><param default="0.4" name="emin" required="True" style="query" type="xs:double"><doc>energy range MIN value (TeV)  </doc></param><param default="40" name="emax" required="True" style="query" type="xs:double"><doc>energy range MAX value (TeV)  </doc></param><param default="20" name="nebin" required="True" style="query" type="xs:int"><doc>number of energy bins</doc></param><param default="0" name="optcontour" required="True" style="query" type="xs:int"><doc>Option to compute contours, (0: no contours, 1: contours for two first parameters of all hypothesis, 2: all contours are computed for all hypothesis (can be very long)), choices="0|1|2"</doc></param><param default="30" name="optcontour_npoints" required="False" style="query" type="xs:int"><doc>Number of points for countours</doc></param><param default="0" name="optminimisationlevel" required="False" style="query" type="xs:int"><doc></doc></param><param default="0" name="optlc" required="False" style="query" type="xs:int"><doc></doc></param><param default="1" name="opthyp" required="True" style="query" type="xs:int"><doc>Hypothesis: 1 = PowerLaw, 2 = ExpoCutOffPowerLaw, 3 = LogParabolic, 4 = BrokenPowerLaw, 5 = SuperExpoCutOffPowerLaw, 6 = SmoothBrokenPowerLaw     </doc></param><param default="1" name="opterefhyp" required="True" style="query" type="xs:int"><doc>reference energy (TeV)</doc></param><param default="1" name="opteminhyp" required="True" style="query" type="xs:double"><doc></doc></param><param default="1000000" name="optemaxhyp" required="True" style="query" type="xs:double"><doc></doc></param><param default="Crab" name="optsrcname" required="True" style="query" type="xs:string"><doc>Source name</doc></param><param default="1" name="optbutterfly" required="True" style="query" type="xs:int"><doc></doc></param><param default="1.5" name="optrebin" required="True" style="query" type="xs:double"><doc>minimum significance each used energy bin must have</doc></param></request>
                <response status="303">
                    <doc>Redirect to /{job}/{job-id}</doc>
                </response>
                <response status="404"/>
                <response status="415"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_parameter_name" path="{job-id}/parameters/{parameter-name}">
            <doc>This resource handles parameter value</doc>
            <method name="GET">
                <doc>Get a parameter name</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                    <param style="template" name="parameter-name" type="xs:string" required="true">
<!-- TODO: add parameter names as option blocks -->
                    <option mediaType="text/plain" value="configfile"><doc></doc></option><option mediaType="text/plain" value="runlist"><doc></doc></option><option mediaType="text/plain" value="anaconfig"><doc>user analysis configuration, choices="std_north_1b|std_south_1b"</doc></option><option mediaType="text/plain" value="emin"><doc>energy range MIN value (TeV)  </doc></option><option mediaType="text/plain" value="emax"><doc>energy range MAX value (TeV)  </doc></option><option mediaType="text/plain" value="nebin"><doc>number of energy bins</doc></option><option mediaType="text/plain" value="optcontour"><doc>Option to compute contours, (0: no contours, 1: contours for two first parameters of all hypothesis, 2: all contours are computed for all hypothesis (can be very long)), choices="0|1|2"</doc></option><option mediaType="text/plain" value="optcontour_npoints"><doc>Number of points for countours</doc></option><option mediaType="text/plain" value="optminimisationlevel"><doc></doc></option><option mediaType="text/plain" value="optlc"><doc></doc></option><option mediaType="text/plain" value="opthyp"><doc>Hypothesis: 1 = PowerLaw, 2 = ExpoCutOffPowerLaw, 3 = LogParabolic, 4 = BrokenPowerLaw, 5 = SuperExpoCutOffPowerLaw, 6 = SmoothBrokenPowerLaw     </doc></option><option mediaType="text/plain" value="opterefhyp"><doc>reference energy (TeV)</doc></option><option mediaType="text/plain" value="opteminhyp"><doc></doc></option><option mediaType="text/plain" value="optemaxhyp"><doc></doc></option><option mediaType="text/plain" value="optsrcname"><doc>Source name</doc></option><option mediaType="text/plain" value="optbutterfly"><doc></doc></option><option mediaType="text/plain" value="optrebin"><doc>minimum significance each used energy bin must have</doc></option></param>
                </request>
                <response status="200"/>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

        <resource id="job_owner" path="{job-id}/owner">
            <doc>This resource handles job owner</doc>
            <method name="GET">
                <doc>Getting an ownerId</doc>
                <request>
                    <param style="template" name="job-id" type="xs:string" required="true"/>
                </request>
                <response status="200">
                    <representation mediaType="text/plain" element="xs:string"/>
                </response>
                <response status="404"/>
                <response status="500"/>
            </method>
        </resource>

    </resource>
    </resources>
</application>
