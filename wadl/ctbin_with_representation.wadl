<?xml version="1.0" standalone="yes"?>
<application xmlns="http://wadl.dev.java.net/2009/02"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xsi:schemaLocation="http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd"
	xmlns:uws="xmlns:uws=http://www.ivoa.net/xml/UWS/v1.0"
	xmlns:xlink="xmlns:xlink=http://www.w3.org/1999/xlink">
	<doc>Implements the UWS 1.0 service</doc>
	<grammars>
		<include href="http://ivoa.net/xml/UWS/UWS-v1.0.xsd"/>
	</grammars>

	<resources base="https://voparis-uws-test.obspm.fr/">

<!-- TODO: jobname -->
	<resource id="joblist" path="ctbin">
		<doc>This resource contains the whole list of job</doc>
		<method id="list_jobs" name="GET">
            <doc>List all created jobs. The list may be empty if the UWS is idle</doc>
            <response status="200">
				<representation mediaType="text/xml" element="uws:jobs"/>
            </response>
            <response status="500"/>
        </method>
        <method id="create_job" name="POST">
            <doc>POSTing a request to the Job List creates a new job</doc>
            <request>
				<param style="query" name="PHASE" type="xs:string" required="false" fixed="RUN"/>
<!-- TODO: parameters -->
<param style="query" name="evfile" type="xs:anyURI" required="true" default="events.fits">
    <doc>Input event list or observation definition file</doc>
</param>
<param style="query" name="outfile" type="xs:string" required="false" default="cntmap.fits">
    <doc>Output counts map or observation definition file</doc>
</param>
<param style="query" name="prefix" type="xs:string" required="false" default="cntmap_" choices="0">
    <doc>Prefix for counts maps in observation definition file</doc>
</param>
<param style="query" name="ebinalg" type="xs:string" required="false" default="LOG" choices="FILE|LIN|LOG">
    <doc>Algorithm for defining energy bins</doc>
</param>
<param style="query" name="emin" type="xs:double" required="true" default="0.1">
    <doc>Start value for first energy bin in TeV</doc>
</param>
<param style="query" name="emax" type="xs:double" required="true" default="100.0">
    <doc>Stop value for last energy bin in TeV</doc>
</param>
<param style="query" name="enumbins" type="xs:long" required="true" default="20">
    <doc>Number of energy bins</doc>
</param>
<param style="query" name="ebinfile" type="xs:string" required="false" default="NONE">
    <doc>Name of the file containing the energy bin definition</doc>
</param>
<param style="query" name="usepnt" type="xs:boolean" required="false" default="no">
    <doc>Use pointing instead of xref/yref parameters?</doc>
</param>
<param style="query" name="nxpix" type="xs:long" required="true" default="200">
    <doc>Size of the X axis in pixels</doc>
</param>
<param style="query" name="nypix" type="xs:long" required="true" default="200">
    <doc>Size of the Y axis in pixels</doc>
</param>
<param style="query" name="binsz" type="xs:double" required="true" default="0.02">
    <doc>Image scale (in degrees/pixel)</doc>
</param>
<param style="query" name="coordsys" type="xs:string" required="true" default="CEL" choices="CEL|GAL">
    <doc>Coordinate system (CEL - celestial, GAL - galactic)</doc>
</param>
<param style="query" name="xref" type="xs:double" required="true" default="83.63">
    <doc>First coordinate of image center in degrees (RA or galactic l)</doc>
</param>
<param style="query" name="yref" type="xs:double" required="true" default="22.01">
    <doc>Second coordinate of image center in degrees (DEC or galactic b)</doc>
</param>
<param style="query" name="axisrot" type="xs:double" required="false" default="0.0">
    <doc>Rotation angle of image axis, in degrees</doc>
</param>
<param style="query" name="proj" type="xs:string" required="true" default="TAN" choices="AIT|AZP|CAR|MER|STG|TAN">
    <doc>Projection method e.g. AIT|AZP|CAR|MER|STG|TAN</doc>
</param>
<param style="query" name="chatter" type="xs:long" required="false" default="2">
    <doc>Chattiness of output</doc>
</param>
<param style="query" name="clobber" type="xs:boolean" required="false" default="yes">
    <doc>Overwrite existing output files with new output files?</doc>
</param>
<param style="query" name="debug" type="xs:boolean" required="false" default="no">
    <doc>Debugging mode activated</doc>
</param>
<param style="query" name="mode" type="xs:string" required="false" default="ql">
    <doc>Mode of automatic parameters</doc>
</param>
<param style="query" name="logfile" type="xs:string" required="false" default="ctbin.log">
    <doc>Log filename</doc>
</param>
<!-- TODO: END: parameters -->
            </request>
            <response status="303">
                <doc>Redirects to newly created resource /{job-id}</doc>
            </response>
            <response status="415"/>
            <response status="500"/>
        </method>

	    <resource id="job" path="{job-id}">
	        <doc>This resource handles a job</doc>
	        <method name="DELETE">
	            <doc>Delete a job</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="303">
	                <doc>Redirects to /{job}</doc>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	        <method name="GET">
	            <doc>Get a job summary</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/xml" element="uws:job"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	        <method name="POST">
	            <doc>Control a Job</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	                <param style="query" name="ACTION" type="xs:string" required="false">
	                    <option value="DELETE"/>
	                </param>
<!-- TODO: parameters -->
<param style="query" name="evfile" type="xs:anyURI" required="true" default="events.fits">
    <doc>Input event list or observation definition file</doc>
</param>
<param style="query" name="outfile" type="xs:string" required="false" default="cntmap.fits">
    <doc>Output counts map or observation definition file</doc>
</param>
<param style="query" name="prefix" type="xs:string" required="false" default="cntmap_" choices="0">
    <doc>Prefix for counts maps in observation definition file</doc>
</param>
<param style="query" name="ebinalg" type="xs:string" required="false" default="LOG" choices="FILE|LIN|LOG">
    <doc>Algorithm for defining energy bins</doc>
</param>
<param style="query" name="emin" type="xs:double" required="true" default="0.1">
    <doc>Start value for first energy bin in TeV</doc>
</param>
<param style="query" name="emax" type="xs:double" required="true" default="100.0">
    <doc>Stop value for last energy bin in TeV</doc>
</param>
<param style="query" name="enumbins" type="xs:long" required="true" default="20">
    <doc>Number of energy bins</doc>
</param>
<param style="query" name="ebinfile" type="xs:string" required="false" default="NONE">
    <doc>Name of the file containing the energy bin definition</doc>
</param>
<param style="query" name="usepnt" type="xs:boolean" required="false" default="no">
    <doc>Use pointing instead of xref/yref parameters?</doc>
</param>
<param style="query" name="nxpix" type="xs:long" required="true" default="200">
    <doc>Size of the X axis in pixels</doc>
</param>
<param style="query" name="nypix" type="xs:long" required="true" default="200">
    <doc>Size of the Y axis in pixels</doc>
</param>
<param style="query" name="binsz" type="xs:double" required="true" default="0.02">
    <doc>Image scale (in degrees/pixel)</doc>
</param>
<param style="query" name="coordsys" type="xs:string" required="true" default="CEL" choices="CEL|GAL">
    <doc>Coordinate system (CEL - celestial, GAL - galactic)</doc>
</param>
<param style="query" name="xref" type="xs:double" required="true" default="83.63">
    <doc>First coordinate of image center in degrees (RA or galactic l)</doc>
</param>
<param style="query" name="yref" type="xs:double" required="true" default="22.01">
    <doc>Second coordinate of image center in degrees (DEC or galactic b)</doc>
</param>
<param style="query" name="axisrot" type="xs:double" required="false" default="0.0">
    <doc>Rotation angle of image axis, in degrees</doc>
</param>
<param style="query" name="proj" type="xs:string" required="true" default="TAN" choices="AIT|AZP|CAR|MER|STG|TAN">
    <doc>Projection method e.g. AIT|AZP|CAR|MER|STG|TAN</doc>
</param>
<param style="query" name="chatter" type="xs:long" required="false" default="2">
    <doc>Chattiness of output</doc>
</param>
<param style="query" name="clobber" type="xs:boolean" required="false" default="yes">
    <doc>Overwrite existing output files with new output files?</doc>
</param>
<param style="query" name="debug" type="xs:boolean" required="false" default="no">
    <doc>Debugging mode activated</doc>
</param>
<param style="query" name="mode" type="xs:string" required="false" default="ql">
    <doc>Mode of automatic parameters</doc>
</param>
<param style="query" name="logfile" type="xs:string" required="false" default="ctbin.log">
    <doc>Log filename</doc>
</param>
<!-- TODO: END: parameters -->
	            </request>
	            <response status="303">
	                <doc>Redirects to /{job}/{job-id}</doc>
	            </response>
	            <response status="404"/>
	            <response status="415"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_phase" path="{job-id}/phase">
	        <doc>This resource handles job phase</doc>
	        <method name="GET">
	            <doc>Get job phase</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/plain" element="xs:string"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	        <method name="POST">
	            <doc>Control a Job</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	                <param style="query" name="PHASE" type="xs:string" required="false">
	                    <option value="ABORT"/>
	                    <option value="RUN"/>
	                </param>
	                <representation mediaType="application/x-www-form-urlencoded"/>
	            </request>
	            <response status="303">
	                <doc>Redirects to /{job}/{job-id}</doc>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_executionduration" path="{job-id}/executionduration">
	        <doc>This resource handles execution duration</doc>
	        <method name="GET">
	            <doc>Get job execution duration</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:int" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/plain" element="xs:int"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	        <method name="POST">
	            <doc>Set execution duration</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	                <param style="query" name="EXECUTIONDURATION" type="xs:int" required="false"/>
	            </request>
	            <response status="303">
	                <doc>Redirects to /{job}/{job-id}</doc>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_destruction" path="{job-id}/destruction">
	        <doc>This resource handles the destruction time of the job</doc>
	        <method name="GET">
	            <doc>Get job destruction time as ISO8601 format</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/plain" element="xs:dateTime"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	        <method name="POST">
	            <doc>Set job destruction time</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	                <param style="query" name="DESTRUCTION" type="xs:dateTime" required="false"/>
	            </request>
	            <response status="303">
	                <doc>Redirects to /{job}/{job-id}</doc>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_error" path="{job-id}/error">
	        <doc>This resource handles error happening during the job processing</doc>
	        <method name="GET">
	            <doc>Get the generated error</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/xml" element="uws:errorSummary"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_quote" path="{job-id}/quote">
	        <doc title="Quote Resource">This resource handles quote prediction</doc>
	        <method name="GET">
	            <doc>Get quote value</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/plain" element="xs:dateTime"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_results" path="{job-id}/results">
	        <doc title="Results Resource">This resource handles job results</doc>
	        <method name="GET">
	            <doc>Get job results</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/xml" element="uws:results"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>

	    <resource id="job_result_name" path="{job-id}/results/{result-id}">
	        <doc>This resource handles result value</doc>
	        <method name="GET">
	            <doc>Get a result</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	                <param style="template" name="result-id" type="xs:string" required="true">
<!-- TODO: INSERT RESULTS NAME -->
<option value="outfile" mediaType="image/fits" default="cntmap.fits">
    <doc>Output counts map or observation definition file</doc>
</option>
<option value="logfile" mediaType="text/plain" default="ctbin.log">
    <doc>Log filename</doc>
</option>
<!-- TODO: END: results name -->
	                </param>
	            </request>
	            <response status="200"/>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>
	    <resource id="job_parameters" path="{job-id}/parameters">
	        <doc title="Parameters Resource">This resource handles job parameters</doc>
	        <method name="GET">
	            <doc>Get Job parameters</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/xml" element="uws:parameters"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	        <method name="POST">
	            <doc>Set parameters</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
<!-- TODO: parameters -->
<param style="query" name="evfile" type="xs:anyURI" required="true" default="events.fits">
    <doc>Input event list or observation definition file</doc>
</param>
<param style="query" name="outfile" type="xs:string" required="false" default="cntmap.fits">
    <doc>Output counts map or observation definition file</doc>
</param>
<param style="query" name="prefix" type="xs:string" required="false" default="cntmap_" choices="0">
    <doc>Prefix for counts maps in observation definition file</doc>
</param>
<param style="query" name="ebinalg" type="xs:string" required="false" default="LOG" choices="FILE|LIN|LOG">
    <doc>Algorithm for defining energy bins</doc>
</param>
<param style="query" name="emin" type="xs:double" required="true" default="0.1">
    <doc>Start value for first energy bin in TeV</doc>
</param>
<param style="query" name="emax" type="xs:double" required="true" default="100.0">
    <doc>Stop value for last energy bin in TeV</doc>
</param>
<param style="query" name="enumbins" type="xs:long" required="true" default="20">
    <doc>Number of energy bins</doc>
</param>
<param style="query" name="ebinfile" type="xs:string" required="false" default="NONE">
    <doc>Name of the file containing the energy bin definition</doc>
</param>
<param style="query" name="usepnt" type="xs:boolean" required="false" default="no">
    <doc>Use pointing instead of xref/yref parameters?</doc>
</param>
<param style="query" name="nxpix" type="xs:long" required="true" default="200">
    <doc>Size of the X axis in pixels</doc>
</param>
<param style="query" name="nypix" type="xs:long" required="true" default="200">
    <doc>Size of the Y axis in pixels</doc>
</param>
<param style="query" name="binsz" type="xs:double" required="true" default="0.02">
    <doc>Image scale (in degrees/pixel)</doc>
</param>
<param style="query" name="coordsys" type="xs:string" required="true" default="CEL" choices="CEL|GAL">
    <doc>Coordinate system (CEL - celestial, GAL - galactic)</doc>
</param>
<param style="query" name="xref" type="xs:double" required="true" default="83.63">
    <doc>First coordinate of image center in degrees (RA or galactic l)</doc>
</param>
<param style="query" name="yref" type="xs:double" required="true" default="22.01">
    <doc>Second coordinate of image center in degrees (DEC or galactic b)</doc>
</param>
<param style="query" name="axisrot" type="xs:double" required="false" default="0.0">
    <doc>Rotation angle of image axis, in degrees</doc>
</param>
<param style="query" name="proj" type="xs:string" required="true" default="TAN" choices="AIT|AZP|CAR|MER|STG|TAN">
    <doc>Projection method e.g. AIT|AZP|CAR|MER|STG|TAN</doc>
</param>
<param style="query" name="chatter" type="xs:long" required="false" default="2">
    <doc>Chattiness of output</doc>
</param>
<param style="query" name="clobber" type="xs:boolean" required="false" default="yes">
    <doc>Overwrite existing output files with new output files?</doc>
</param>
<param style="query" name="debug" type="xs:boolean" required="false" default="no">
    <doc>Debugging mode activated</doc>
</param>
<param style="query" name="mode" type="xs:string" required="false" default="ql">
    <doc>Mode of automatic parameters</doc>
</param>
<param style="query" name="logfile" type="xs:string" required="false" default="ctbin.log">
    <doc>Log filename</doc>
</param>
<!-- TODO: END: parameters -->
	            </request>
	            <response status="303">
	                <doc>Redirect to /{job}/{job-id}</doc>
	            </response>
	            <response status="404"/>
	            <response status="415"/>
	            <response status="500"/>
	        </method>
	    </resource>
	    <resource id="job_parameter_name" path="{job-id}/parameters/{parameter-name}">
	        <doc>This resource handles parameter value</doc>
	        <method name="GET">
	            <doc>Get a parameter name</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	                <param style="template" name="parameter-name" type="xs:string" required="true">
<!-- TODO: INSERT PARAMETERS NAMES -->
<option value="evfile" mediaType="text/plain">
    <doc>Input event list or observation definition file</doc>
</option>
<option value="outfile" mediaType="text/plain">
    <doc>Output counts map or observation definition file</doc>
</option>
<option value="prefix" mediaType="text/plain">
    <doc>Prefix for counts maps in observation definition file</doc>
</option>
<option value="ebinalg" mediaType="text/plain">
    <doc>Algorithm for defining energy bins</doc>
</option>
<option value="emin" mediaType="text/plain">
    <doc>Start value for first energy bin in TeV</doc>
</option>
<option value="emax" mediaType="text/plain">
    <doc>Stop value for last energy bin in TeV</doc>
</option>
<option value="enumbins" mediaType="text/plain">
    <doc>Number of energy bins</doc>
</option>
<option value="ebinfile" mediaType="text/plain">
    <doc>Name of the file containing the energy bin definition</doc>
</option>
<option value="usepnt" mediaType="text/plain">
    <doc>Use pointing instead of xref/yref parameters?</doc>
</option>
<option value="nxpix" mediaType="text/plain">
    <doc>Size of the X axis in pixels</doc>
</option>
<option value="nypix" mediaType="text/plain">
    <doc>Size of the Y axis in pixels</doc>
</option>
<option value="binsz" mediaType="text/plain">
    <doc>Image scale (in degrees/pixel)</doc>
</option>
<option value="coordsys" mediaType="text/plain">
    <doc>Coordinate system (CEL - celestial, GAL - galactic)</doc>
</option>
<option value="xref" mediaType="text/plain">
    <doc>First coordinate of image center in degrees (RA or galactic l)</doc>
</option>
<option value="yref" mediaType="text/plain">
    <doc>Second coordinate of image center in degrees (DEC or galactic b)</doc>
</option>
<option value="axisrot" mediaType="text/plain">
    <doc>Rotation angle of image axis, in degrees</doc>
</option>
<option value="proj" mediaType="text/plain">
    <doc>Projection method e.g. AIT|AZP|CAR|MER|STG|TAN</doc>
</option>
<option value="chatter" mediaType="text/plain">
    <doc>Chattiness of output</doc>
</option>
<option value="clobber" mediaType="text/plain">
    <doc>Overwrite existing output files with new output files?</doc>
</option>
<option value="debug" mediaType="text/plain">
    <doc>Debugging mode activated</doc>
</option>
<option value="mode" mediaType="text/plain">
    <doc>Mode of automatic parameters</doc>
</option>
<option value="logfile" mediaType="text/plain">
    <doc>Log filename</doc>
</option>
<!-- TODO: END: parameters name -->
	                </param>
	            </request>
	            <response status="200"/>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>
	    <resource id="job_owner" path="{job-id}/owner">
	        <doc>This resource handles job owner</doc>
	        <method name="GET">
	            <doc>Getting an ownerId</doc>
	            <request>
	                <param style="template" name="job-id" type="xs:string" required="true"/>
	            </request>
	            <response status="200">
	                <representation mediaType="text/plain" element="xs:string"/>
	            </response>
	            <response status="404"/>
	            <response status="500"/>
	        </method>
	    </resource>
	</resource>
    </resources>
</application>
